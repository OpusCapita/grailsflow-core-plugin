User Management Guide
--------------------------

Grailsflow-0.8 gives possibility to define assignees for the process nodes
(define nodes visibility). There are two Process Engine variables that are not
stored in DB but existed in action execution context. They are available in
nodes as process variables:

 - nextAssignee;

 - nextAssignees;

Sometimes it is necessary to specify variables visivility for activated nodes, e.g
some of them are visible only for Administrator, some available for simple users,
other - for restricted group, etc.

The property 'nextAssignees' is the most common variant for using. It has a type
Map, there the key - nodeID, value - list of restricted users/roles/groups that
can review node with 'nodeID'.

The property 'nextAssignee' has type List and contains a simple collection of
usersnames/roles/groups that can review following activated nodes. The difference
between 'nextAssignees' and 'nextAssignee' properties it that in 'nextAssignees'
we can specify different assigneers for each following nodes, at that time
'nextAssignee' gives you possibility to specify assigneers for all following nodes
(it is more convenient, if you have only one following node - in this case you do
not need to specify 'nodeID' of that node).

Pay attention, that restricted usersnames/roles/groups in assignees should be the
same type values, as provided information from AbstractWorklistProvider implementation.
It means that if you want, for example, to create restrictions for user roles and
your user class contains many roles, then you will have something like:

 1. In Process Definition:
    ...
    action {
      ...
      AssignTo(var:'nextAssignee') {
        Evaluate(expression: '["ROLE_USER", "ROLE_ADMIN"]')
      }
      
    }


 2. In class  FooWorklistProvider extends AbstractWorklistProvider {

       List getUserRoles(def user) {
           return user.roles
       }

    }

It works in such way, because in implementation we check, if the UserRoles collection
ave at least one common entry with 'nextAssignee' List, if yes - the user can review
activated node, in other case - the node is not in a user worklist, it is invisible and
inaccessible for him.

If there are no any specified assignees for the next activated nodes - the nodes are
visible and available for all requesters.
