version: 2.1

orbs:
  jira: circleci/jira@1.2.2

aliases:
  - &docker_auth
    auth:
      username: ${DOCKER_USER}
      password: ${DOCKER_PASS}

  - &default-context
    context:
      - shared-creds

defaults: &defaults
  docker:
    - image: opuscapita/minsk-core-ci:4
      <<: *docker_auth
  working_directory: ~/build

jobs:
  init:
    docker:
      - image: opuscapita/minsk-core-machineuser-env:2
        <<: *docker_auth
    steps:
      - run: circle_ci_add_env.sh GH_MAIL GH_NAME CIRCLE_CI_TOKEN

  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - 'v1-grails-plugin-{{ .Branch }}-{{ checksum "grails-app/conf/BuildConfig.groovy" }}'
            - 'v1-grails-plugin-{{ .Branch }}'
            - v1-grails-plugin
      - run: if [ -f /.dockerenv ]; then configure-maven.sh && configure-grails.sh && configure-npm.sh; fi
      - run:
          name: Refresh grails dependencies.
          command: grails refresh-dependencies --non-interactive
      - run:
          name: Grails tests.
          command: grails test-app --stacktrace --offline
      - run:
          name: Save grails test results.
          command: |
            mkdir -p ~/test-xml-reports/
            find . -type f -regex ".*/target/test-reports/.*xml" -exec cp -v {} ~/test-xml-reports/ \;
          when: always
      - store_test_results:
          path: ~/test-xml-reports
      - store_artifacts:
          path: ~/test-xml-reports
      - run:
          name: Deploy.
          command: grails maven-deploy -Dgrails.env=prod -verbose
      - run:
          name: Remove plugin directory from maven repo.
          command: find ~/.m2/repository -type d -name '*-SNAPSHOT' -prune -exec rm -rf {} +
      - save_cache:
          key: 'v1-grails-plugin-{{ .Branch }}-{{ checksum "grails-app/conf/BuildConfig.groovy" }}'
          paths: ~/.m2/repository

  release:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Executing release scrtipt.
          command: .circleci/release.sh

workflows:
  version: 2
  release-and-build:
    jobs:
      - init:
          <<: *default-context
          filters:
            tags:
              only: /.*/
      - release:
          <<: *default-context
          filters:
            branches:
              only: release
          requires:
            - init
          post-steps:
            - jira/notify
      - build:
          <<: *default-context
          filters:
            tags:
              only: /.*/
            branches:
              ignore: release
          requires:
            - init
          post-steps:
            - jira/notify
