defaults: &defaults
  docker:
    - image: opuscapita/minsk-core-ci:grails-2.4.4-jdk-8u192-nodejs-8.17.0-maven-3.3.9
  working_directory: ~/build

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - run:
          name: Environment inject.
          command: env_inject.sh

      - checkout

      - restore_cache:
          keys:
            - grails-core-plugin-{{ .Branch }}-{{ checksum "grails-app/conf/BuildConfig.groovy" }}
            - grails-core-plugin-{{ .Branch }}
            - grails-core-plugin

      - run:
          name: "Refresh grails dependencies."
          command: grails refresh-dependencies --non-interactive

      - run:
          name: "Grails tests."
          command: "grails test-app --stacktrace --offline"

      - run:
          name: "Save grails test results."
          command: |
            mkdir -p ~/test-xml-reports/
            find . -type f -regex ".*/target/test-reports/.*xml" -exec cp -v {} ~/test-xml-reports/ \;
          when: always

      - store_test_results:
          path: ~/test-xml-reports

      - store_artifacts:
          path: ~/test-xml-reports

      - run:
          name: "Deploy."
          command: grails maven-deploy -Dgrails.env=prod -verbose

#      - run:
#          name: "Build docs."
#          command: |
#            rm -rf plugin.xml
#            grails doc --offline

#      - run:
#          name: "Deploy docs."
#          command: grails DocDeploy --offline --upload-zip-to-google-drive

      - save_cache:
          key: grails-core-plugin-{{ .Branch }}-{{ checksum "grails-app/conf/BuildConfig.groovy" }}
          paths:
            - /root/.grails/.m2
            - /root/.m2

  release:
    <<: *defaults
    steps:

      - run:
          name: Environment inject
          command: env_inject.sh

      - checkout

      - run:
          name: Executing release scrtipt.
          command: .circleci/release.sh

workflows:
  version: 2
  release-and-build:
    jobs:
      - release:
          filters:
            branches:
              only: release
      - build:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: release

